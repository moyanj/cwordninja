name: Build Cython Package for Multiple Python Versions

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels for CPython ${{ matrix.PYTHON_VERSION }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        PYTHON_VERSION: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.PYTHON_VERSION }}

    - name: Install Cython, build dependencies, and twine
      run: |
        python -m pip install --upgrade pip
        pip install cython wheel setuptools twine

    - name: Build the wheel
      run: |
        python setup.py bdist_wheel sdist
      env:
        # 确保Cython编译时使用正确的Python版本
        CYTHON_TRACE: "1"
        CYTHON_SHOW_COMPILING: "1"

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.PYTHON_VERSION }}-${{ matrix.os }}
        path: dist/

  collect_wheels:
    needs: build_wheels
    name: Collect wheels
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: wheels/

    - name: Upload to PyPI
      # 只在主分支的push事件中运行
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        twine upload --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} wheels/*